<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yu&#39;s Blog</title>
  
  <subtitle>总有些东西 值得去记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-14T14:32:24.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>于左臣</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>进程-线程-协程</title>
    <link href="http://yoursite.com/post/dd8e473a.html"/>
    <id>http://yoursite.com/post/dd8e473a.html</id>
    <published>2018-08-14T14:25:42.000Z</published>
    <updated>2018-08-14T14:32:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这些概念老生常谈了，最近使用了下Lua的协程，查了查资料，又有些新的理解，整理整理。</p></blockquote><p>先上基本概念，以下内容来源于维基百科。</p><ul><li><p>进程<br>进程（英语：process），是计算机中已运行程序的实体。进程为曾经是分时系统的基本运作单位。在面向进程设计的系统（如早期的UNIX，Linux2.4及更早的版本）中，进程是程序的基本执行实体；在面向线程设计的系统（如当代多数操作系统、Linux2.6及更新的版本）中，进程本身不是基本运行单位，而是线程的容器。程序本身只是指令、数据及其组织形式的描述，进程才是程序（那些指令和数据）的真正运行实例。若干进程有可能与同一个程序相关系，且每个进程皆可以同步（循序）或异步（平行）的方式独立运行。现代计算机系统可在同一段时间内以进程的形式将多个程序加载到存储器中，并借由时间共享（或称时分复用），以在一个处理器上表现出同时（平行性）运行的感觉。同样的，使用多线程技术（多线程即每一个线程都代表一个进程内的一个独立执行上下文）的操作系统或计算机体系结构，同样程序的平行线程，可在多CPU主机或网络上真正同时运行（在不同的CPU上）</p></li><li><p>线程<br>线程（英语：thread）是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。在Unix System V及SunOS中也被称为轻量进程（lightweight processes），但轻量进程更多指内核线程（kernel thread），而把用户线程（user thread）称为线程。线程是独立调度和分派的基本单位。线程可以为操作系统内核调度的内核线程，如Win32线程；由用户进程自行调度的用户线程，如Linux平台的POSIXThread；或者由内核与用户进程，如Windows 7的线程，进行混合调度。同一进程中的多条线程将共享该进程中的全部系统资源，如虚拟地址空间，文件描述符和信号处理等等。但同一进程中的多个线程有各自的调用栈（call stack），自己的寄存器环境（register context），自己的线程本地存储（thread-local storage）。一个进程可以有很多线程，每条线程并行执行不同的任务。在多核或多CPU，或支持Hyper-threading的CPU上使用多线程程序设计的好处是显而易见，即提高了程序的执行吞吐率。在单CPU单核的计算机上，使用多线程技术，也可以把进程中负责I/O处理、人机交互而常被阻塞的部分与密集计算的部分分开来执行，编写专门的workhorse线程执行密集计算，从而提高了程序的执行效率。</p></li><li><p>协程<br>与子例程一样，协程也是一种程序组件。相对子例程而言，协程更为一般和灵活，但在实践中使用没有子例程那样广泛。协程源自Simula和Modula-2语言，但也有其他语言支持。协程更适合于用来实现彼此熟悉的程序组件，如合作式多任务，迭代器，无限列表和管道。</p></li></ul><blockquote><p>好，官方说明结束，如果你看到这里，还是一脸懵逼的话，那我说说我自己的理解。和上面介绍的顺序一样，先有进程，在有线程，然后是协程，可以这么想象，试着在空间上去理解进程，在时间上去理解线程。</p></blockquote><blockquote><p>进程给出了一个空间，在这个空间内共享系统资源，内存等，但是进程不具备执行的能力，一个进程至少需要一个主线程来供操作系统调度，实际上真正消耗CPU是线程(当然线程也有自己独立的小空间)在一个进程内，多个线程可以共享这个进程的大空间，那线程与协程区别又是什么呢？</p></blockquote><blockquote><p>说到系统调度，这个是人为不可控的，多线程之间到底这个时候哪条线程再跑，这是由系统决定的，当有时候我们想自己决定执行顺序以避免一些问题的时候，就产生了锁这个概念，上锁之后顺序是确定了，但是成本增加了。而协程的调度，完全是由用户决定的，无需锁的参与，并且是在一个线程内，自然成本最低，最快，当然缺点也就来了，那就是一个线程内不管你开了多少协程，始终无法真正利用多核CPU，无法做到真正的并发，有利有弊，多线程甚至多进程下在开协程，那自然另说。</p></blockquote><blockquote><p>在回过来看，各自之间切换的成本 进程 &gt; 线程 &gt; 协程，速度也自然是由慢到快，举个栗子，传统的生产者-消费者模型是一个线程写消息，一个线程取消息，通过锁机制控制队列和等待，但一不小心就可能死锁。如果改用协程，生产者生产消息后，直接通过yield跳转到消费者开始执行，待消费者执行完毕后，切换回生产者继续生产，效率极高。可安全性就就反过来了，进程之间一个挂了，对另一个完全没有影响，好比你电脑或者手机上，崩掉一个程序(进程)，另外的该是啥样还是啥样，进程是咋崩的，线程执行过程中出错导致的，那这个进程内如果有多个线程，随便一个出错了，别的也别玩了，大空间(进程)都了没了，玩个毛。</p></blockquote><p>总结一下</p><ol><li>进程，线程是操作系统级的，协程是语言级的。</li><li>每个进程至少包含一个线程，因为线程才是真正的运行单位。</li><li>线程进程都是同步机制，而协程则是异步。</li><li>IO密集型一般使用多线程或者多进程，CPU密集型一般使用多进程，强调非阻塞异步并发的一般都是使用协程，当然有时候也是需要多进程线程池结合的，或者是其他组合方式。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;这些概念老生常谈了，最近使用了下Lua的协程，查了查资料，又有些新的理解，整理整理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先上基本概念，以下内容来源于维基百科。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进程&lt;br&gt;进程（英语：process），是计算
      
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客NexT主题实用配置</title>
    <link href="http://yoursite.com/post/a890275a.html"/>
    <id>http://yoursite.com/post/a890275a.html</id>
    <published>2018-08-07T13:02:21.000Z</published>
    <updated>2018-08-11T02:04:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-配置Git"><a href="#1-配置Git" class="headerlink" title="1.配置Git"></a>1.配置Git</h2><ol><li><p>站点文件.config.yml中配置git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo:</span><br><span class="line">      github: git@github.com:github账号/发布仓库,分支名称</span><br><span class="line">      coding: git@git.coding.net:coding账号/发布仓库,分支名称</span><br></pre></td></tr></table></figure></li><li><p>安装hexo-deployer-git插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-新建带日期格式的博文"><a href="#2-新建带日期格式的博文" class="headerlink" title="2. 新建带日期格式的博文"></a>2. 新建带日期格式的博文</h2><p>使用hexo new post “博文名称”生成的博文以博文名称生成文件，当文件太多时不便于管理查看，生成yyyy-MM-dd-博文名称的名称有助于我们管理自己的博文。<br>在站点文件_config.yml中设置博客生成名称<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md # File name of new posts</span><br></pre></td></tr></table></figure></p><h2 id="3-博文插入图片"><a href="#3-博文插入图片" class="headerlink" title="3. 博文插入图片"></a>3. 博文插入图片</h2><ol><li><p>配置站点文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure></li><li><p>安装上传本地图片的插件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li><li><p>执行hexo n xxx<br>在/source/_posts文件夹内除了生成xxxx.md文件还会生成一个同名的文件夹，把图片复制到同名文件夹中，在博文中添加图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img 图片名.png 图片 %&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-链接持久化"><a href="#4-链接持久化" class="headerlink" title="4. 链接持久化"></a>4. 链接持久化</h2><p>在Hexo中当我们创建的博文名包含中文的名的时候，url链接地址经常会变成一串很长的难以理解的字符串，不利于博文的链接分享，以及搜索引擎搜索，我能可以让url链接持久化来解决这个问题。 </p><ol><li><p>安装url地址持久化插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></li><li><p>配置站点文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">permalink: post/:abbrlink.html  </span><br><span class="line">permalink_defaults:  </span><br><span class="line"></span><br><span class="line">abbrlink:  </span><br><span class="line">  alg: crc32  # 算法：crc16(default) and crc32  </span><br><span class="line">  rep: hex    # 进制：dec(default) and hex</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-添加分享功能-百度分享"><a href="#5-添加分享功能-百度分享" class="headerlink" title="5. 添加分享功能(百度分享)"></a>5. 添加分享功能(百度分享)</h2><ol><li>配置NexT主题文件_config.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidushare:  </span><br><span class="line">  type: button</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-添加搜索功能"><a href="#6-添加搜索功能" class="headerlink" title="6. 添加搜索功能"></a>6. 添加搜索功能</h2><ol><li><p>安装 hexo-generator-searchdb 插件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>配置NexT主题文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-配置Git&quot;&gt;&lt;a href=&quot;#1-配置Git&quot; class=&quot;headerlink&quot; title=&quot;1.配置Git&quot;&gt;&lt;/a&gt;1.配置Git&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;站点文件.config.yml中配置git&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>是时候该写点东西了</title>
    <link href="http://yoursite.com/post/a3ea2363.html"/>
    <id>http://yoursite.com/post/a3ea2363.html</id>
    <published>2018-08-05T12:26:11.000Z</published>
    <updated>2018-08-11T02:03:59.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>翻开博客，发现三年前就建立了，然而域名都过期了..毛都没写。<br>感觉最近这几年的日子有点滋润了，体现到现实中就是发现自己最近莫名的烦躁，不舒服即意味着成长，想了想，年轻的时候还是多过点不舒服的日子吧，总归在三十岁的时候能交上一份满意的答卷吧，时间不多了。</p></blockquote><h3 id="多交流-多思考"><a href="#多交流-多思考" class="headerlink" title="多交流 多思考"></a>多交流 多思考</h3><p>最近和一些朋友聊天，产生了很多想法，也使我重新思考了某些问题，记录一下，我发现我现在有了问题之后就特别喜欢找人聊天，找很多的人聊天，每个人的想法都很有意思，角度都不一样，可以让自己更全面的去了解这个问题，听取别人的想法的时候，也会潜移默化的使自己变的谦虚，因为确实自己很多没想到啊..</p><h3 id="关于游戏"><a href="#关于游戏" class="headerlink" title="关于游戏"></a>关于游戏</h3><p><em>为什么国内的游戏公司没那么成功？</em><br>这个问题似乎自己从来没怎么想过，一个朋友问我，纯做游戏的公司最后能做到什么程度？<br>现在风光无限的TMD，前些日子在纳斯达克敲钟的拼多多(两年多就做到这种程度，不得不服，当然还有很多阴谋论，暂且不表..)，还有昨天突破万亿市值的苹果，小米在香港上市，历经七年，做为科技公司的前三大IPO，据说前1000号员工都都成了千万富翁了。<br>反观我之前所在的公司LK，同样做了七年游戏，14年香港上市，除了少数的几个人能够财富自由之外，即便是当时股价最高的时候，前100号员工，有千万身家的也屈指可数，更别说现在几毛钱的股价…</p><p><em>做游戏不赚钱？</em><br>看看腾讯，网易吧，日流水过亿的农药..风靡一时的阴阳师，每年年终，都是受刺激的时候，某某某项目组发了100多个月的年终..游戏的变现能力早已不用怀疑。可是腾讯有QQ和微信，网易也是门户起家，邮箱严选云音乐，可不只是游戏。于是我们得出一个结论，纯做游戏似乎很难积累，缺少复利，失败率极高，完全就是三年不开张，开张吃三年，成了一款，下一款能不能成完全没有预期。</p><p><em>为什么做游戏不能积累？</em><br>做游戏是可以积累的，看看国外的公司就清楚了，魔兽，侠盗猎车手，使命召唤系列，还有各种枪车球类的就不说了，国内的游戏行业毕竟发展的时间很短，依然还处在野蛮生长的时代，市场很大，经常是什么火了，大家跟风一波端，清一色的产品都出来了，过一段时间新出来一个品类，又继续这么搞，每次做的东西都不一样，如何积累？</p><p><em>未来的路？</em><br>听说头条已经正式组件游戏研发部门了，准备正面刚腾讯，快手也在大肆招兵买马，阿里大文娱，去年也收购了简悦..目前看来游戏还是做为一个强力的辅助，有了流量，那在做游戏就是如鱼得水。可是专门做游戏的公司，又该怎么样走出一条属于自己的路呢？想了想，也只有等到浪潮散去，坚持活下去，坚持做一个品类，做到极致，做成特色，甚至做成IP，总是有机会的吧。至于怎么活下去..各凭本事吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;翻开博客，发现三年前就建立了，然而域名都过期了..毛都没写。&lt;br&gt;感觉最近这几年的日子有点滋润了，体现到现实中就是发现自己最近莫名的烦躁，不舒服即意味着成长，想了想，年轻的时候还是多过点不舒服的日子吧，总归在三十岁的时候能交上一份满意的答卷吧，时
      
    
    </summary>
    
      <category term="随想" scheme="http://yoursite.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
</feed>
